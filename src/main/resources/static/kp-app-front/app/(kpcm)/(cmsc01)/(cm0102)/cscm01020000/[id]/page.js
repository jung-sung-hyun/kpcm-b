"use client"
import Link from "next/link"
import * as React from 'react';
import {useEffect, useState } from 'react';
import { Directions } from "@mui/icons-material";
import {
   List
  ,ListItem
  ,ListItemText
  ,Typography
  ,Button
  , TextField
} from '@mui/material';

// export const metadata = {
//   title: "Create Next App",
//   description: "Generated by finger Corporation",
// };
import { DataGrid } from '@mui/x-data-grid';

export default  function SelectList(props) {

  const idx = props.params.id;
  const param = {idx:idx};
  const [dataList   , setDataList   ] = useState({});

  async function initfresh(){
      const res = await  fetch(`${process.env.NEXT_PUBLIC_API_URL}/cm0101/selectBoardList`,{
        method : 'POST',
        cache:'no-store',
        headers : {
            'Content-Type' : 'application/json',
        },
        data: JSON.stringify(param),
        body : JSON.stringify({
          idx : idx,
        })
      })
      .then((response) => {
        if(response.status === 200){
          return response.json();
          //return response.text();
        }else {
          // 서버 에러 코드 전송 시 실행할 부분
        }
      })
      .then((result) => {
        // 성공 시 실행할 부분
        return result;
      })
      .catch((err) => {
        // 인터넷 문제로 실패 시 실행할 부분
        console.log(err);
      });
      setDataList(res.Alllist);
  };

  useEffect((event)=>{
    //event.preventDefault();
    initfresh();
  }, []);

  const columns = [
    { field: 'id'       , headerName: 'ID'      , width: 90,  hidden:true},
    { field: 'idx'      , headerName: '순번'    , width: 90  },
    { field: 'title'    , headerName: '제목'    , width: 150 },
    { field: 'contents' , headerName: '공지사항', width: 250 },
    { field: 'updDt'    , headerName: '작성일자', width: 90  },
  ];
  if (!dataList) {
    return;
  }
  const rows = dataList;


  const newPage = {
    pathname: `/kpcm/cm01/cm0101/insertBoard/${idx}`,
    query: {
      //title: movie.original_title,
      title: "",
    },
  };
  const inputValue ='';

  async function handleChange(event) {
  }
  return (
      <>
     <div style={{ height: 400, width: '100%' }}>
     <TextField
        label="Name"
        variant="outlined"
        value={inputValue}
        onChange={handleChange}
        fullWidth
        sx={{ mb: 2 }}
      />

       <DataGrid
         rows={rows}
         columns={columns}
         pageSize={5}
         rowsPerPageOptions={[5, 10, 20]}
         checkboxSelection
         disableSelectionOnClick
       />
     </div>
     </>
  )
}

